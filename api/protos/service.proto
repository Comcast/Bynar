syntax = "proto2";
option optimize_for = SPEED;

package ceph_disk;

message Osd {
  // filesystem id
  optional string fsid = 1;
  // osd id
  required uint64 id = 2;
  // block device of the osd
  optional string block_device = 3;
  // If journal isn't set then it's collocated
  optional string journal = 4;
  // Active or spare
  required bool active = 5;

  // Usage details
  // how much space is currently used
  required uint64 used_space = 6;
  // total space on the osd
  required uint64 total_space = 7;
}

// This will be added in a future version
// message RepairResponse {
// required bool corrupted = 1;
// required bool repaired = 2;
// required bool in_progress = 3;
// required string tracking_ticket_id = 4;
// required Disk disk = 5;
// optional string mount_path = 6;
//}

// GPT partition information
message Partition {
  // id of the partition
  required string uuid = 1;
  // first logical block address of the partition
  required uint64 first_lba = 2;
  // last logical block address of the partition
  required uint64 last_lba = 3;
  // flags associated with the partition
  required uint64 flags = 4;
  // name of the partition
  optional string name = 5;
}

// list of partitions
message PartitionInfo { repeated Partition partition = 1; }

// disk object descriptor
message Disk {
  // type of disk
  required DiskType type = 1;
  // the device path
  required string dev_path = 2;
  // list of partitions on the disk
  required PartitionInfo partitions = 3;
  // the disk serial number
  optional string serial_number = 4;
}

enum DiskType {
  // Special loopback device
  LOOPBACK = 0;
  // Logical volume device
  LVM = 1;
  // Linux software RAID
  MDRAID = 2;
  // Non-Volatile Memory Express, a logical device interface
  NVME = 3;
  // Ramdisk
  RAM = 4;
  // Regular rotational device
  ROTATIONAL = 5;
  // AKA SSD
  SOLID_STATE = 6;
  // virtual disk
  VIRTUAL = 7;
  UNKNOWN = 8;
}

// list of disks
message Disks { repeated Disk disk = 1; }

message OpResult {
  // result (ok or error)
  required ResultType result = 1;
  // error message
  optional string error_msg = 2;
}

// result of a command
enum ResultType {
  OK = 0;
  ERR = 1;
}

message OpBoolResult {
  required ResultType result = 1;
  // Value is set if OK
  optional bool value = 2;
  // error_msg is set if ERR
  optional string error_msg = 3;
}

message OpStringResult {
  required ResultType result = 1;
  // Value is set if OK
  optional string value = 2;
  // error_msg is set if ERR
  optional string error_msg = 3;
}

// Jira ticket information
message  JiraInfo{
      // Ticket number
      required string ticket_id = 1;
      // name of the JIRA server
      required string server_name = 2;
 }

message OpJiraTicketsResult {
   required ResultType result = 1;
   // Values is set if OK 
   repeated  JiraInfo tickets = 2;
   // error_msg is set if ERR
   optional string error_msg = 3;
 }

 // Operation type
enum Op {
  // Generic Add Disk.  Returns OpResult
  Add = 1;
  // returns OpResult
  AddPartition = 6;
  // Returns Disks
  List = 3;
  // Returns OpResult
  Remove = 4;
  // Returns bool
  SafeToRemove = 5;
 //return tickets created
  GetCreatedTickets = 7;
}

// Datacenter related API's
enum DatacenterOp {
  // All require server_id as a param
  // Returns OpStringResult
  GetDc = 1;
  // Returns OpStringResult
  GetRack = 2;
  // Returns OpStringResult
  GetRow = 3;
  // Returns OpStringResult
  GetElevation = 4;
}

message DatacenterOperation {
  required DatacenterOp Op_type = 1;
  // id of the server to perform the operation on
  required string server_id = 2;
}
// Datacenter related API's

// Service operations that can be performed
message Operation {
  required Op Op_type = 1;
  // Used for Add and Remove
  optional string disk = 2;
  // Used for Add, Remove and SafeToRemove
  optional bool simulate = 3;

  // Optional AddPartition fields
  optional uint64 partition_start = 4;
  optional uint64 partition_end = 5;
  optional string partition_name = 6;

  // Optional Ceph related fields
  optional uint64 osd_id = 7;

  // Optional gluster related fields
  // Host:/dev/disk strings for gluster replica sets
  repeated string replica_set = 10;
}
